name: Android CI

on:
  push:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Clean Bulid
      run: ./gradlew clean
    - name: Run ktlint
      run: ./gradlew ktlintCheck
    - name: Run Unit Test
      run: ./gradlew test
      
    # - name: Run Android Test
    #   uses: reactivecircus/android-emulator-runner@v2
    #   with:
    #    api-level: 26
    #    target: default
    #    arch: x86
    #    profile: Nexus 6
    #    script: ./gradlew connectedCheck --stacktrace
    #    run: ./gradlew connectedAndroidTest
       
    - name: Hello World
      run: echo "Hello World"

  fail_Msg:
    name: Fail Discord Msg
    needs: [build]
    if: always() && needs.build.result == 'failure'
    runs-on: ubuntu-latest

    steps:
    - name: Discord Webhook Action
      uses: tsickert/discord-webhook@v5.4.0
      with:
        webhook-url: ${{ secrets.DISCORD_SECRET }}
        embed-title: "${{github.repository}}"
        embed-description : "${{github.event.head_commit.message}} \n Test Fail"
        embed-url : "https://github.com/DimJe/CICD-Test"
        embed-image-url : "https://upload3.inven.co.kr/upload/2023/09/25/bbs/i016109978763.gif"

  success_Msg:
    name: Success Discord Msg
    needs: [build]
    if: needs.build.result == 'success'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
  
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
        
    - name: Build Apk
      run: bash ./gradlew assembleRelease --stacktrace
    - uses: r0adkll/sign-android-release@v1
      name: Sign app APK
    # ID used to access action output
      id: sign_app
      with:
        releaseDirectory: app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.KEY_BASE64 }}
        alias: ${{ secrets.KEY_ALIAS }}
        keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}

  # Example use of `signedReleaseFile` output -- not needed
    
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Signed app bundle
        path: ${{steps.sign_app.outputs.signedReleaseFile}}
        
    - name: Discord Webhook Action
      uses: tsickert/discord-webhook@v5.4.0
      with:
        webhook-url: ${{ secrets.DISCORD_SECRET }}
        embed-title: "${{github.repository}}"
        embed-description : "${{github.event.head_commit.message}}\nTest Success" 
        embed-url : "https://github.com/DimJe/CICD-Test"
        embed-image-url: "https://upload3.inven.co.kr/upload/2023/09/25/bbs/i016184723873.gif"
        filename: app/build/outputs/apk/debug/app-debug.apk


  create_pr:
    name: Create Pull Request
    needs: [success_Msg]
    if: needs.success_Msg.result == 'success'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Create PR
      uses: thomaseizinger/create-pull-request@master
      with:
        github_token: ${{ secrets.TOKEN }}
        head: ${{ github.ref }}
        base: release
        title: "${{github.event.head_commit.message}}"
      
